"use strict";(self.webpackChunkanis_saied=self.webpackChunkanis_saied||[]).push([[8877],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=l,k=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const i={sidebar_position:1},r="Vue JS Overview",o={unversionedId:"web/JS Frameworks/vue js/vue-js",id:"web/JS Frameworks/vue js/vue-js",title:"Vue JS Overview",description:"Learning path",source:"@site/docs/web/JS Frameworks/vue js/vue-js.md",sourceDirName:"web/JS Frameworks/vue js",slug:"/web/JS Frameworks/vue js/vue-js",permalink:"/docs/web/JS Frameworks/vue js/vue-js",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Front-end frameworks",permalink:"/docs/web/JS Frameworks/"},next:{title:"Router vue js",permalink:"/docs/web/JS Frameworks/vue js/router-vue"}},p={},s=[{value:"Learning path",id:"learning-path",level:2},{value:"Vue conferences",id:"vue-conferences",level:2},{value:"Vue JS",id:"vue-js",level:2},{value:"Vue JS UI frameworks",id:"vue-js-ui-frameworks",level:3},{value:"Vue Js Ecosystem",id:"vue-js-ecosystem",level:3},{value:"Online Editor",id:"online-editor",level:2},{value:"Vue JS packages",id:"vue-js-packages",level:3},{value:"Vue JS Starter templates:",id:"vue-js-starter-templates",level:2},{value:"how to use vue js",id:"how-to-use-vue-js",level:2},{value:"Tutorials",id:"tutorials",level:2},{value:"Example of mini projects",id:"example-of-mini-projects",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Single-File Components",id:"single-file-components",level:3},{value:"Options API vs Composition API",id:"options-api-vs-composition-api",level:3},{value:"Options API",id:"options-api",level:3},{value:"Composition API",id:"composition-api",level:3},{value:"Features",id:"features",level:2},{value:"Reactivity",id:"reactivity",level:3},{value:"Directives",id:"directives",level:2},{value:"v-bind : Attribute Bindings",id:"v-bind--attribute-bindings",level:3},{value:"class bindings",id:"class-bindings",level:4},{value:"style bindings",id:"style-bindings",level:4},{value:"v-on : Event Listeners",id:"v-on--event-listeners",level:3},{value:"v-model : two-way bindings on form input elements",id:"v-model--two-way-bindings-on-form-input-elements",level:3},{value:"v-if : Conditional Rendering",id:"v-if--conditional-rendering",level:3},{value:"v-for : List Rendering",id:"v-for--list-rendering",level:3},{value:"Computed Property",id:"computed-property",level:2},{value:"Template Refs",id:"template-refs",level:2},{value:"Watchers",id:"watchers",level:2},{value:"Components",id:"components",level:2},{value:"Props",id:"props",level:3},{value:"Emits",id:"emits",level:3},{value:"Slots",id:"slots",level:3},{value:"Lifecycle hooks",id:"lifecycle-hooks",level:2}],u={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"vue-js-overview"},"Vue JS Overview"),(0,l.kt)("h2",{id:"learning-path"},"Learning path"),(0,l.kt)("p",null,"-",(0,l.kt)("a",{parentName:"p",href:"https://www.vuemastery.com/learning-path/beginner"},"https://www.vuemastery.com/learning-path/beginner")),(0,l.kt)("p",null,"??? Vue course completion certificate. ???"),(0,l.kt)("h2",{id:"vue-conferences"},"Vue conferences"),(0,l.kt)("p",null,"-",(0,l.kt)("a",{parentName:"p",href:"https://www.vuemastery.com/dashboard/conferences"},"https://www.vuemastery.com/dashboard/conferences")),(0,l.kt)("h2",{id:"vue-js"},"Vue JS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/"},"Vue JS .org")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cli.vuejs.org/guide/installation.html"},"Vue JS CLI"))),(0,l.kt)("h3",{id:"vue-js-ui-frameworks"},"Vue JS UI frameworks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://antdv.com/components/overview/"},"antdv")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://element-plus.org/en-US/"},"element-plus")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.3/getting-started/download/#npm"},"bootstrap"))),(0,l.kt)("h3",{id:"vue-js-ecosystem"},"Vue Js Ecosystem"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"vue-router"),(0,l.kt)("li",{parentName:"ul"},"vuexvue-devtools"),(0,l.kt)("li",{parentName:"ul"},"vue-loader"),(0,l.kt)("li",{parentName:"ul"},"awesome-vue")),(0,l.kt)("h2",{id:"online-editor"},"Online Editor"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/examples/#hello-world"},"https://vuejs.org/examples/#hello-world"))),(0,l.kt)("h3",{id:"vue-js-packages"},"Vue JS packages"),(0,l.kt)("p",null,"To find packages use ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npmjs")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/pagekit/vue-resource/tree/develop"},"vue-resource")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://autocomplete.trevoreyre.com/#/"},"autocomplete")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://vue3-simple-typeahead-demo.netlify.app/"},"vue3-simple-typeahead"))),(0,l.kt)("h2",{id:"vue-js-starter-templates"},"Vue JS Starter templates:"),(0,l.kt)("p",null,"You can use these starter templates (clone github repository)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://vite-starter.element-plus.org/"},"Vue 3 + Element Plus + Vite")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://element-plus-nuxt.vercel.app/"},"Element Plus With NuxtJS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/element-plus/element-plus-in-laravel-starter"},"element-plus-in-laravel-starter"))),(0,l.kt)("h2",{id:"how-to-use-vue-js"},"how to use vue js"),(0,l.kt)("p",null,"Vue can be used in different ways:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Enhancing static HTML without a build step"),(0,l.kt)("li",{parentName:"ul"},"Embedding as Web Components on any page"),(0,l.kt)("li",{parentName:"ul"},"Single-Page Application (SPA)"),(0,l.kt)("li",{parentName:"ul"},"Fullstack / Server-Side Rendering (SSR)"),(0,l.kt)("li",{parentName:"ul"},"Jamstack / Static Site Generation (SSG)"),(0,l.kt)("li",{parentName:"ul"},"Targeting desktop, mobile, WebGL, and even the terminal")),(0,l.kt)("p",null,"More details of ",(0,l.kt)("a",{parentName:"p",href:"https://vuejs.org/guide/extras/ways-of-using-vue.html"},"ways-of-using-vue")),(0,l.kt)("p",null,"Vue cheatsheets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://learnvue.co/vue-3-essentials-cheatsheet"},"Vue 3 Cheatsheet")," from learnvue.co : ",(0,l.kt)("a",{parentName:"li",href:"https://learnvue.co/LearnVue-Vue-3-Cheatsheet.pdf"},"PDF")),(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"tutorials"},"Tutorials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/tutorial/"},"official vue tutorials")," with editor on line to test it"),(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("h2",{id:"example-of-mini-projects"},"Example of mini projects"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Simple examples from vuejs.org : ",(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/examples"},"https://vuejs.org/examples"))),(0,l.kt)("h2",{id:"definitions"},"Definitions"),(0,l.kt)("h3",{id:"single-file-components"},"Single-File Components"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Single-File Component")," (also known as ",(0,l.kt)("inlineCode",{parentName:"p"},"*.vue")," files, abbreviated as ",(0,l.kt)("strong",{parentName:"p"},"SFC"),"). "),(0,l.kt)("p",null,"A Vue SFC, encapsulates the component's logic  (JavaScript), template (HTML), and styles (CSS) in a single file"),(0,l.kt)("h3",{id:"options-api-vs-composition-api"},"Options API vs Composition API"),(0,l.kt)("p",null,"For production use:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Go with Options API if you are  not using build tools, or plan to use Vue primarily in low-complexity  scenarios, e.g. progressive enhancement."),(0,l.kt)("li",{parentName:"ul"},"Go with Composition API + Single-File Components if you plan to build full applications with Vue.")),(0,l.kt)("h3",{id:"options-api"},"Options API"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the Options API is implemented on top of the Composition API"),(0,l.kt)("li",{parentName:"ul"},'centered around the concept of a "component instance" (',(0,l.kt)("inlineCode",{parentName:"li"},"this"),"), which typically aligns better with a  class-based mental model for users coming from OOP language backgrounds. ")),(0,l.kt)("h3",{id:"composition-api"},"Composition API"),(0,l.kt)("p",null,"In SFCs, Composition API is typically used with  ",(0,l.kt)("inlineCode",{parentName:"p"},"setup")," attribute"),(0,l.kt)("p",null,"For example,  imports and top-level variables / functions declared in ",(0,l.kt)("inlineCode",{parentName:"p"},"<script setup>")," are directly usable in the template."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"requires an understanding of how reactivity works in Vue to be used effectively.")),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("h3",{id:"reactivity"},"Reactivity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The core feature of Vue is ",(0,l.kt)("strong",{parentName:"p"},"declarative rendering")," : When the state changes, the HTML updates automatically.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"reactivity and declarative rendering.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"State that can trigger updates when changed are considered ",(0,l.kt)("strong",{parentName:"p"},"reactive"),". We can declare reactive state using Vue's ",(0,l.kt)("inlineCode",{parentName:"p"},"reactive()"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"reactive()")," only works on objects (including arrays and built-in types like ",(0,l.kt)("inlineCode",{parentName:"p"},"Map")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Set"),").")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ref()"),", on the other hand, can take any value type and create an object that exposes the inner value under a ",(0,l.kt)("inlineCode",{parentName:"p"},".value")," property")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Reactive state declared in the component's ",(0,l.kt)("inlineCode",{parentName:"p"},"<script setup>")," block can be used directly in the template.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"we did not need to use ",(0,l.kt)("inlineCode",{parentName:"p"},".value")," when accessing the ",(0,l.kt)("inlineCode",{parentName:"p"},"message")," ref in templates ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"mustaches ",(0,l.kt)("inlineCode",{parentName:"p"},"{{}}"),"are only used for text interpolation."),(0,l.kt)("p",{parentName:"li"},"Example :"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"import { ref } from 'vue'\nconst message = ref('Hello World!')\n<h1>{{ message }}</h1>\n<h1>{{ message.split('').reverse().join('') }}</h1>\n")))),(0,l.kt)("h2",{id:"directives"},"Directives"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("strong",{parentName:"li"},"directive")," is a special attribute that starts with the ",(0,l.kt)("inlineCode",{parentName:"li"},"v-")," prefix. "),(0,l.kt)("li",{parentName:"ul"},"They are part of Vue's template syntax. "),(0,l.kt)("li",{parentName:"ul"},"Similar to text  interpolations, directive values are JavaScript expressions that have  access to the component's state.")),(0,l.kt)("h3",{id:"v-bind--attribute-bindings"},"v-bind : Attribute Bindings"),(0,l.kt)("p",null,"To bind an attribute to a dynamic value, we use the ",(0,l.kt)("inlineCode",{parentName:"p"},"v-bind")," directive:"),(0,l.kt)("p",null,"The element's ",(0,l.kt)("inlineCode",{parentName:"p"},"id")," attribute will be synced with the ",(0,l.kt)("inlineCode",{parentName:"p"},"dynamicId")," property from the component's state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<div v-bind:id="dynamicId"></div>\n<div :id="dynamicId"></div>\n')),(0,l.kt)("p",null,"example: add a dynamic ",(0,l.kt)("inlineCode",{parentName:"p"},"class")," binding to the ",(0,l.kt)("inlineCode",{parentName:"p"},"<h1>"),", using the ",(0,l.kt)("inlineCode",{parentName:"p"},"titleClass")," ref as its value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<script setup>\nimport { ref } from 'vue'\n\nconst titleClass = ref('title')\n<\/script>\n\n<template>\n  <h1 :class=\"titleClass\">Make me red</h1>\n</template>\n\n<style>\n.title {\n  color: red;\n}\n</style>\n")),(0,l.kt)("h4",{id:"class-bindings"},"class bindings"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'const isRed = ref(true)\n<p :class="{ red: isRed }" ></p>\n<style>\n.red {\n  color: red;\n}\n</style>\n')),(0,l.kt)("h4",{id:"style-bindings"},"style bindings"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"const color = ref('green')\n<p :style=\"{ color }\"></p>\n")),(0,l.kt)("h3",{id:"v-on--event-listeners"},"v-on : Event Listeners"),(0,l.kt)("p",null,"We can listen to DOM events using the ",(0,l.kt)("inlineCode",{parentName:"p"},"v-on")," directive:\n",(0,l.kt)("inlineCode",{parentName:"p"},"increment")," is referencing a function declared in ",(0,l.kt)("inlineCode",{parentName:"p"},"<script setup>")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<button v-on:click="increment">{{ count }}</button>\n<button @click="increment">{{ count }}</button>\n\n<script setup>\nimport { ref } from \'vue\'\n\nconst count = ref(0)\n\nfunction increment() {\n  // update component state\n  count.value++\n}\n<\/script>\n')),(0,l.kt)("h3",{id:"v-model--two-way-bindings-on-form-input-elements"},"v-model : two-way bindings on form input elements"),(0,l.kt)("p",null,"Using ",(0,l.kt)("inlineCode",{parentName:"p"},"v-bind")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"v-on")," together, we can create two-way bindings on form input elements"),(0,l.kt)("p",null,"Old solution :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<input :value="text" @input="onInput">\nfunction onInput(e) {\n  // a v-on handler receives the native DOM event\n  // as the argument.\n  text.value = e.target.value\n}\n')),(0,l.kt)("p",null,"New solution :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<input v-model="text">\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"v-model")," automatically syncs the ",(0,l.kt)("inlineCode",{parentName:"li"},"<input>"),"'s value with the bound state, so we ",(0,l.kt)("strong",{parentName:"li"},"no longer need to use an event handler")," for that."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"v-model")," works not only on text inputs, but also on other input types such as checkboxes, radio buttons, and select dropdowns.")),(0,l.kt)("p",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<script setup>\nimport { ref } from 'vue'\n\nconst text = ref('')\n<\/script>\n\n<template>\n  <input v-model=\"text\" placeholder=\"Type here\">\n  <p>{{ text }}</p>\n</template>\n")),(0,l.kt)("h3",{id:"v-if--conditional-rendering"},"v-if : Conditional Rendering"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<h1 v-if="awesome">Vue is awesome!</h1>\n<h1 v-else>Oh no \ud83d\ude22</h1>\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("inlineCode",{parentName:"li"},"<h1>")," will be rendered only if the value of ",(0,l.kt)("inlineCode",{parentName:"li"},"awesome")," is ",(0,l.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Truthy"},"truthy"),"."),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"awesome")," changes to a ",(0,l.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Falsy"},"falsy")," value, it will be removed from the DOM."),(0,l.kt)("li",{parentName:"ul"},"We can also use ",(0,l.kt)("inlineCode",{parentName:"li"},"v-else")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"v-else-if")," to denote other branches of the condition")),(0,l.kt)("p",null,"example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<script setup>\nimport { ref } from \'vue\'\n\nconst awesome = ref(true)\n\nfunction toggle() {\n  awesome.value = !awesome.value\n}\n<\/script>\n\n<template>\n  <button @click="toggle">toggle</button>\n  <h1 v-if="awesome">Vue is awesome!</h1>\n  <h1 v-else>Oh no \ud83d\ude22</h1>\n</template>\n')),(0,l.kt)("h3",{id:"v-for--list-rendering"},"v-for : List Rendering"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"use the ",(0,l.kt)("inlineCode",{parentName:"li"},"v-for")," directive to render a list of elements based on a source array")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<ul>\n  <li v-for="todo in todos" :key="todo.id">\n    {{ todo.text }}\n  </li>\n</ul>\n')),(0,l.kt)("p",null,"There are two ways to update the list:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Call ",(0,l.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/9009879/which-javascript-array-functions-are-mutating"},"mutating methods")," on the source array:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"todos.value.push(newTodo)\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Replace the array with a new one:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"todos.value = todos.value.filter(/* ... */)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'const list = ref([1, 2, 3])\n<li v-for="item of list">{{ item }}</li>\n')),(0,l.kt)("h2",{id:"computed-property"},"Computed Property"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"create a computed ref that computes its ",(0,l.kt)("inlineCode",{parentName:"li"},".value")," based on other reactive data sources"),(0,l.kt)("li",{parentName:"ul"},"A computed property tracks other reactive state used in its computation  as dependencies. "),(0,l.kt)("li",{parentName:"ul"},"It caches the result and automatically updates it when  its dependencies change.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const filteredTodos = computed(() => {\n  // return filtered todos based on\n  // `todos.value` & `hideCompleted.value`\n  return hideCompleted.value\n    ? todos.value.filter((t) => !t.done)\n    : todos.value\n})\n")),(0,l.kt)("h2",{id:"template-refs"},"Template Refs"),(0,l.kt)("p",null," ",(0,l.kt)("em",{parentName:"p"},"There will be cases where we need to manually work with the DOM.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a ",(0,l.kt)("strong",{parentName:"li"},"template ref")," - i.e. a reference to an element in the template - using the ",(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/api/built-in-special-attributes.html#ref"},"special ",(0,l.kt)("inlineCode",{parentName:"a"},"ref")," attribute"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<p ref="pElementRef">hello</p>\n')),(0,l.kt)("p",null,"To access the ref, we need to declare a ref with matching name:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const pElementRef = ref(null)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Notice the ref is initialized with ",(0,l.kt)("inlineCode",{parentName:"li"},"null")," value. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This is because the element doesn't exist yet when ",(0,l.kt)("inlineCode",{parentName:"li"},"<script setup>")," is executed. "),(0,l.kt)("li",{parentName:"ul"},"The template ref is only accessible after the component is ",(0,l.kt)("strong",{parentName:"li"},"mounted"),".")))),(0,l.kt)("p",null,"Example :"),(0,l.kt)("p",null,"add an ",(0,l.kt)("inlineCode",{parentName:"p"},"onMounted")," hook, access the ",(0,l.kt)("inlineCode",{parentName:"p"},"<p>")," via ",(0,l.kt)("inlineCode",{parentName:"p"},"pElementRef.value"),", and perform some direct DOM operations on it (e.g. changing its ",(0,l.kt)("inlineCode",{parentName:"p"},"textContent"),")."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<script setup>\nimport { ref, onMounted } from 'vue'\n\nconst pElementRef = ref(null)\n\nonMounted(() => {\n  // component is now mounted.\n  pElementRef.value.textContent = 'mounted!'\n})\n<\/script>\n\n<template>\n  <p ref=\"pElementRef\">hello</p>\n</template>\n")),(0,l.kt)("h2",{id:"watchers"},"Watchers"),(0,l.kt)("p",null,'Sometimes we may need to perform "side effects" reactively - We can achieve this with watchers'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"for  example, "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"logging a number to the console when it changes. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"fetching new data when an ID changes. ")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"watch()")," can directly watch a ref, and the callback gets fired whenever ",(0,l.kt)("inlineCode",{parentName:"p"},"count"),"'s value changes. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"watch()")," can also watch other types of data sources - more details are covered in ",(0,l.kt)("a",{parentName:"p",href:"https://vuejs.org/guide/essentials/watchers.html"},"Guide - Watchers"),"."))),(0,l.kt)("p",null,"Example :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<script setup>\nimport { ref, watch } from \'vue\'\n\nconst todoId = ref(1)\nconst todoData = ref(null)\n\nasync function fetchData() {\n  todoData.value = null\n  const res = await fetch(\n    `https://jsonplaceholder.typicode.com/todos/${todoId.value}`\n  )\n  todoData.value = await res.json()\n}\n\nfetchData()\n\nwatch(todoId, fetchData)\n<\/script>\n\n<template>\n  <p>Todo id: {{ todoId }}</p>\n  <button @click="todoId++">Fetch next todo</button>\n  <p v-if="!todoData">Loading...</p>\n  <pre v-else>{{ todoData }}</pre>\n</template>\n')),(0,l.kt)("h2",{id:"components"},"Components"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Parent can pass to child:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"data : via ",(0,l.kt)("strong",{parentName:"li"},"props")),(0,l.kt)("li",{parentName:"ul"},"template : via ",(0,l.kt)("strong",{parentName:"li"},"slots")))),(0,l.kt)("li",{parentName:"ul"},"child can pass to parent",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"data : via ",(0,l.kt)("strong",{parentName:"li"},"emits")),(0,l.kt)("li",{parentName:"ul"})))),(0,l.kt)("h3",{id:"props"},"Props"),(0,l.kt)("p",null,"pass data from parent to child"),(0,l.kt)("p",null,"A child component can accept input from the parent via ",(0,l.kt)("strong",{parentName:"p"},"props"),". "),(0,l.kt)("p",null,"First, (the ChildComp.vue) it needs to declare the props it accepts:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"\x3c!-- ChildComp.vue --\x3e\n<script setup>\nconst props = defineProps({\n  msg: String\n})\n<\/script>\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Note ",(0,l.kt)("inlineCode",{parentName:"p"},"defineProps()")," is a compile-time macro and doesn't need to be imported. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Once declared, the ",(0,l.kt)("inlineCode",{parentName:"p"},"msg")," prop can be used in the child component's template. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"It can also be accessed in JavaScript via the returned object of ",(0,l.kt)("inlineCode",{parentName:"p"},"defineProps()"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The parent can pass the prop to the child just like attributes. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"To pass a dynamic value, we can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"v-bind")," syntax:"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<ChildComp :msg="greeting" />\n<ChildComp :msg="\'simple text\'" />\n')),(0,l.kt)("h3",{id:"emits"},"Emits"),(0,l.kt)("p",null,"pass data from child to parent"),(0,l.kt)("p",null,"In addition to receiving props, a child component can also emit events to the parent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<script setup>\n// declare emitted events\nconst emit = defineEmits(['response'])\n\n// emit with argument\nemit('response', 'hello from child')\n<\/script>\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"emit()")," is the event name. ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Any additional arguments are passed on to the event listener.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The parent can listen to child-emitted events using ",(0,l.kt)("inlineCode",{parentName:"p"},"v-on")," - here the handler receives the extra argument from the child emit call and assigns it to local state:"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<ChildComp @response="(msg) => childMsg = msg" />\n')),(0,l.kt)("h3",{id:"slots"},"Slots"),(0,l.kt)("p",null,"In addition to passing data via props, the parent component can also pass down template fragments to the child via ",(0,l.kt)("strong",{parentName:"p"},"slots"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<ChildComp>\n  This is some slot content!\n</ChildComp>\n")),(0,l.kt)("p",null,"In the child component, it can render the slot content from the parent using the ",(0,l.kt)("inlineCode",{parentName:"p"},"<slot>")," element as outlet:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- in child template --\x3e\n<slot/>\n")),(0,l.kt)("p",null,"Content inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"<slot>"),' outlet will be treated as "fallback" content: it will be displayed if the parent did not pass down any slot content:'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<slot>Fallback content</slot>\n")),(0,l.kt)("p",null,"Example :"),(0,l.kt)("p",null,"parent: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<script setup>\nimport { ref } from 'vue'\nimport ChildComp from './ChildComp.vue'\n\nconst msg = ref('from parent')\n<\/script>\n\n<template>\n  <ChildComp>content {{msg}}</ChildComp>\n</template>\n")),(0,l.kt)("p",null,"child"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},"<template>\n  <slot>Fallback content</slot>\n</template>\n")),(0,l.kt)("p",null,"result :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tex"},"content from parent\n")),(0,l.kt)("h2",{id:"lifecycle-hooks"},"Lifecycle hooks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a ",(0,l.kt)("strong",{parentName:"li"},"lifecycle hook"),"  allows us to  register a callback to be called at certain times of the component's  lifecycle. "),(0,l.kt)("li",{parentName:"ul"},"There are other hooks such as ",(0,l.kt)("inlineCode",{parentName:"li"},"onUpdated")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"onUnmounted"),". "),(0,l.kt)("li",{parentName:"ul"},"Check out the ",(0,l.kt)("a",{parentName:"li",href:"https://vuejs.org/guide/essentials/lifecycle.html#lifecycle-diagram"},"Lifecycle Diagram")," for more details."),(0,l.kt)("li",{parentName:"ul"},"Vue lifecycle hooks diagram from ",(0,l.kt)("a",{parentName:"li",href:"https://learnvue.co/articles/"},"learnvue.co"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://learnvue.co/img/articles/intro-to-vue-3/11.png",alt:"Vue lifecycle hooks diagram"})," "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If you want an ",(0,l.kt)("a",{parentName:"li",href:"https://learnvue.co/2020/03/how-to-use-lifecycle-hooks-in-vue3/"},"in-depth guide on Vue lifecycle hooks, check out this article"),".")))}c.isMDXComponent=!0}}]);